version: '3.7'

volumes:
    postgres_data: 
        driver: local

networks:
  external1: 
    name: front-back-network
  external2:
    name: back-mariadb-network

services:

  # NestJS-Graphql backend
  users_service:
    image: arturoalcaniz/node-image
    command: bash -c "cd /app/UsersService && bash install.sh"
    volumes:
        - ./UsersService:/app/UsersService
        - ./entities-lib:/app/entities-lib
        - ./config-lib:/app/config-lib
        - ./certs:/app/certs
        - ./error/:/root/.npm/_logs/
    depends_on:
      - mariadb
    environment: 
    # Timezone. Variable from .env file
      - TZ
      - MAILER_CONTAINER_NAME
      - MAILER_CONTAINER_PORT
      - USERS_CONTAINER_PORT
      - JWT_KEY
    tty: true
    stdin_open: true
    container_name: ${USERS_CONTAINER_NAME}
    networks: 
      - external1
      - external2

  products_service:
    image: arturoalcaniz/node-image
    command: bash -c "cd /app/ProductsService && bash install.sh"
    volumes:
        - ./ProductsService:/app/ProductsService
        - ./entities-lib:/app/entities-lib
        - ./config-lib:/app/config-lib
        - ./certs:/app/certs
        - ./error/:/root/.npm/_logs/
    depends_on:
      - mariadb
    environment: 
    # Timezone. Variable from .env file
      - TZ
      - MAILER_CONTAINER_NAME
      - MAILER_CONTAINER_PORT
      - USERS_CONTAINER_NAME
      - USERS_CONTAINER_PORT
      - PRODUCTS_CONTAINER_PORT
      - JWT_KEY
    tty: true
    stdin_open: true
    container_name: ${PRODUCTS_CONTAINER_NAME}
    networks: 
      - external1
      - external2
  
  mailer_service:
    image: arturoalcaniz/node-image
    command: bash -c "cd /app/MailerService && bash install.sh"
    volumes:
        - ./MailerService:/app/MailerService
        - ./certs:/app/certs
        - ./error/:/root/.npm/_logs/
    environment: 
    # Timezone. Variable from .env file
      - TZ
      - MAILER_CONTAINER_PORT
    tty: true
    stdin_open: true
    container_name: ${MAILER_CONTAINER_NAME}
    networks: 
      - external1
      - external2

  # React NextJS Frontend Container
  frontend_container:
    image: arturoalcaniz/node-image
    command: bash -c "cd /app/FrontService && bash install.sh"
    ports:
      - "${FRONTEND_CONTAINER_PORT}:443"
    volumes:
      - ./FrontService:/app/FrontService
      - ./certs:/app/certs
    environment: 
    # Timezone. Variable from .env file
      - TZ
      - USERS_CONTAINER_NAME
      - USERS_CONTAINER_PORT
      - PRODUCTS_CONTAINER_NAME
      - PRODUCTS_CONTAINER_PORT
    tty: true
    stdin_open: true
    container_name: ${FRONTEND_CONTAINER_NAME}
    networks: 
      - external1

  # MariaDB
  mariadb:
    image: mariadb
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    container_name: ${MARIADB_CONTAINER_NAME}
    environment:
      MYSQL_DATABASE: ${MARIADB_DATABASE}
      MYSQL_USER: ${MARIADB_USERNAME}
      MYSQL_PASSWORD: ${MARIADB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MARIADB_PASSWORD}
    networks: 
      - external2
    volumes:
      - ./mariadb:/var/lib/mysql
    restart: on-failure

  # Adminer
  adminer:
    image: adminer:latest
    container_name: ${ADMINER_CONTAINER_NAME}
    environment: 
      - ADMINER_DEFAULT_SERVER=${MARIADB_CONTAINER_NAME}
      - ADMINER_DESIGN=galkaev
      - TZ
    networks:
      - external2
